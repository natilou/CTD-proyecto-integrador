stages:          # List of stages for jobs, and their order of execution
  - build_front
  - test_front
  - deploy_front
  - build_Back
  - test_Back
  - deploy_Back

front_build:       # This job runs in the build stage, which runs first.
  stage: build_front
  image: node:19-alpine3.15
  script:
    - cd frontend
    - ls -l
    - npm install
    - npm run build
    - echo "Compiling the code..."
  artifacts:
    paths:
      - frontend/build/

front_test:   # This job runs in the test stage.
  stage: test_front    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests..."

front_deploy:      # This job runs in the deploy stage.
  stage: deploy_front  # It only runs when *both* jobs in the test stage complete successfully.
  image: 
    name: amazon/aws-cli
    entrypoint: [""]
  script:
    - aws --version
    - ls frontend/build/
    - aws s3 rm s3://$S3_BUCKET --recursive
    - aws s3 cp frontend/build/ s3://$S3_BUCKET --recursive
    - echo "Deploying application..."


back_build-job:       # This job runs in the build stage, which runs first.
  stage: build_Back
  image: maven:3.8.6-openjdk-18
  script:
    - echo "Compiling the code..."
    - ls -l
    - cd backend/PI_grupo_10
    - ls -l
    - 'mvn deploy -s ci_settings.xml'
    - ls -l
    - cd  target
    - ls -l
    - echo "Compile complete."
  artifacts:
    paths:
      - backend/PI_grupo_10/target/*.jar

back_unit-test-job:   # This job runs in the test stage.
  stage: test_Back    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 1
    - echo "Code coverage is 90%"

back_lint-test-job:   # This job also runs in the test stage.
  stage: test_Back    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 1
    - echo "No lint issues found."

back_deploy-job:      # This job runs in the deploy stage.
  stage: deploy_Back  # It only runs when *both* jobs in the test stage complete successfully.
  image: ubuntu:22.04
  before_script:
    - chmod 400 $EC2_SSH_key
  script:
    - echo "Deploying application..."
    - apt-get update && apt-get install -y openssh-client
    - cd backend/PI_grupo_10/target
    - ls -l 
    - scp -o StrictHostKeyChecking=no -i $EC2_SSH_key PI_grupo_10-1.0.0.jar ubuntu@ec2-3-21-197-14.us-east-2.compute.amazonaws.com:/home/ubuntu
    - ssh -o StrictHostKeyChecking=no -i $EC2_SSH_key ubuntu@ec2-3-21-197-14.us-east-2.compute.amazonaws.com "sudo service digital-booking stop && sudo cp -f /home/ubuntu/PI_grupo_10-1.0.0.jar /opt/digital_booking/ && sudo service digital-booking start"
    - echo "Application successfully deployed."


